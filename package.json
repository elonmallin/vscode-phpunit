{
  "name": "phpunit",
  "displayName": "PHPUnit",
  "description": "Run PHPUnit tests from VSCode.",
  "version": "4.1.1",
  "publisher": "emallin",
  "icon": "images/phpunit.png",
  "engines": {
    "vscode": "^1.44.0"
  },
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/elonmallin/vscode-phpunit"
  },
  "homepage": "https://github.com/elonmallin/vscode-phpunit/blob/master/README.md",
  "bugs": {
    "url": "https://github.com/elonmallin/vscode-phpunit/issues"
  },
  "license": "SEE LICENSE IN LICENSE.md",
  "keywords": [
    "phpunit",
    "test",
    "unittest",
    "php",
    "docker",
    "ssh"
  ],
  "activationEvents": [
    "onCommand:phpunit.Test",
    "onCommand:phpunit.TestNearest",
    "onCommand:phpunit.TestSuite",
    "onCommand:phpunit.TestDirectory",
    "onCommand:phpunit.RerunLastTest",
    "onCommand:phpunit.TestingStop"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "phpunit.Test",
        "title": "PHPUnit Test"
      },
      {
        "command": "phpunit.TestNearest",
        "title": "PHPUnit Test Nearest"
      },
      {
        "command": "phpunit.TestSuite",
        "title": "PHPUnit Test Suite"
      },
      {
        "command": "phpunit.TestDirectory",
        "title": "PHPUnit Test Directory"
      },
      {
        "command": "phpunit.RerunLastTest",
        "title": "PHPUnit Rerun Last Test"
      },
      {
        "command": "phpunit.TestingStop",
        "title": "PHPUnit Stop Running Tests"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "PHPUnit Configuration",
      "properties": {
        "phpunit.driverPriority": {
          "type": "array",
          "default": [
            "Command",
            "Ssh",
            "Path",
            "Composer",
            "Phar",
            "DockerContainer",
            "Docker",
            "GlobalPhpUnit"
          ],
          "description": "Set the priority of drivers to try and run phpunit with. The drivers will try and find phpunit in common places."
        },
        "phpunit.php": {
          "type": "string",
          "description": "Absolute path to php. Fallback to global php if it exists on the command line.",
          "default": null
        },
        "phpunit.phpunit": {
          "type": "string",
          "description": "Path to phpunit. Can be the phpunit file or phpunit.phar.\n\nAutomatically finds it in common places:\n  - Composer vendor directory\n  - phpunit.phar in your project\n  - phpunit (or phpunit.bat for windows) globally on the command line",
          "default": null
        },
        "phpunit.ssh": {
          "type": "string",
          "description": "DEPRECATED: Please use the [Remote Development Extension by Microsoft](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack) for a great remote development experience.\n\nCustom ssh command to run Ex: `ssh root@localhost`.\nREQUIRED: Public/private keys are required to use ssh, passwords won't work.\n\nThe command will resolve to `ssh root@localhost \"<command>\"` where `<command>` is populated like normal by the extension and could be something like `php ./phpunit.phar -c phpunit.xml` depending on your settings.\n\nYou may also want to use the `phpunit.paths` setting to map local paths to remote ones.\n\nHow to setup ssh public/private keys:\n  - Windows powershell `ssh-keygen && cat $env:userprofile/.ssh/id_rsa.pub | ssh root@localhost 'cat >> .ssh/authorized_keys'`\n  - Linux bash `ssh-keygen && ssh-copy-id root@localhost`",
          "default": null
        },
        "phpunit.command": {
          "type": "string",
          "description": "Custom command to run. Ex: `docker exec -t container_name`.",
          "default": null
        },
        "phpunit.args": {
          "type": "array",
          "default": [],
          "description": "Any phpunit args (phpunit --help) E.g. --configuration ./phpunit.xml.dist"
        },
        "phpunit.preferRunClassTestOverQuickPickWindow": {
          "type": "boolean",
          "default": false,
          "description": "If we should test the whole class instead of showing the quick pick window when cursor is on anything but a function name."
        },
        "phpunit.clearOutputOnRun": {
          "type": "boolean",
          "default": true,
          "description": "True will clear the output when we run a new test. False will leave the output after every test."
        },
        "phpunit.colors": {
          "type": "string",
          "default": "--colors=always",
          "description": "Will add argument `--colors=always` to the `phpunit` command or whatever is set here. `null` or empty string removes this setting."
        },
        "phpunit.docker.image": {
          "type": "string",
          "description": "DEPRECATED: Please use the [Remote Development Extension by Microsoft](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack) for a great remote development experience.\n\nDocker image to use for php.",
          "default": "php"
        },
        "phpunit.docker.container": {
          "type": "string",
          "description": "DEPRECATED: Please use the [Remote Development Extension by Microsoft](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack) for a great remote development experience.\n\nDocker container to run the unit tests in. Note that you have to set paths for this to work.",
          "default": null
        },
        "phpunit.paths": {
          "type": "object",
          "description": "Path mappings for your virtual/remote environments. Ex: { \"local/workspace/folder\": \"docker/workspace/folder\" }"
        },
        "phpunit.execPath": {
          "type": "string",
          "description": "DEPRECATED: Use phpunit.php and phpunit.phpunit instead."
        },
        "phpunit.envVars": {
            "type": "object",
            "title": "Set environment variables before running the phpunit command"
        }
      }
    },
    "problemMatchers": [
      {
        "name": "phpunit",
        "owner": "php",
        "fileLocation": "absolute",
        "pattern": [
          {
            "regexp": "^\\d+\\)\\s.*$"
          },
          {
            "regexp": "^(.*)$",
            "message": 1
          },
          {
            "regexp": "[\\r\\n]*"
          },
          {
            "regexp": "^(.*):(\\d+)$",
            "file": 1,
            "location": 2
          }
        ]
      },
      {
        "name": "phpunit-app",
        "owner": "php",
        "fileLocation": "relative",
        "pattern": [
          {
            "regexp": "^\\d+\\)\\s.*$"
          },
          {
            "regexp": "^(.*)$",
            "message": 1
          },
          {
            "regexp": "[\\r\\n]*"
          },
          {
            "regexp": "^/app/(.*):(\\d+)$",
            "file": 1,
            "location": 2
          }
        ]
      }
    ],
    "taskDefinitions": [
      {
        "type": "phpunit",
        "required": [
          "task"
        ],
        "properties": {
          "task": {
            "type": "string",
            "description": "The task to execute"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "node ./node_modules/vscode/bin/test",
    "lint": "tslint --project tsconfig.json",
    "lint-fix": "tslint --project tsconfig.json --fix"
  },
  "devDependencies": {
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.13.4",
    "@types/vscode": "^1.44.0",
    "mocha": "^10.2.0",
    "prettier": "^2.0.5",
    "tslint": "^6.1.2",
    "tslint-config-prettier": "^1.18.0",
    "tslint-plugin-prettier": "^2.0.1",
    "typescript": "^3.3.3333",
    "typescript-tslint-plugin": "^0.5.5",
    "vscode-test": "^1.3.0"
  },
  "dependencies": {
    "command-exists": "^1.2.8",
    "escape-string-regexp": "^4.0.0",
    "node-run-cmd": "^1.0.1"
  }
}
